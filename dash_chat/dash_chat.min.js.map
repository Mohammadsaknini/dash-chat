{"version":3,"file":"dash_chat.min.js","mappings":"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","sources":["webpack:///./src/styles/chatStyles.css","webpack:///./src/styles/indicatorStyle.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack:///./node_modules/extend/index.js","webpack:///./node_modules/inline-style-parser/index.js","webpack:///./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack:///./node_modules/react/jsx-runtime.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack:///./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack:///./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack:///./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack:///./node_modules/style-to-object/cjs/index.js","webpack:///external window \"React\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/compat","webpack:///webpack/runtime/nonce","webpack:///./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack:///./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack:///./node_modules/lucide-react/dist/esm/Icon.js","webpack:///./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack:///./node_modules/lucide-react/dist/esm/icons/ellipsis-vertical.js","webpack:///./node_modules/estree-util-is-identifier-name/lib/index.js","webpack:///./node_modules/hast-util-whitespace/lib/index.js","webpack:///./node_modules/property-information/lib/util/schema.js","webpack:///./node_modules/property-information/lib/util/merge.js","webpack:///./node_modules/property-information/lib/normalize.js","webpack:///./node_modules/property-information/lib/util/info.js","webpack:///./node_modules/property-information/lib/util/types.js","webpack:///./node_modules/property-information/lib/util/defined-info.js","webpack:///./node_modules/property-information/lib/util/create.js","webpack:///./node_modules/property-information/lib/xlink.js","webpack:///./node_modules/property-information/lib/xml.js","webpack:///./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack:///./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack:///./node_modules/property-information/lib/xmlns.js","webpack:///./node_modules/property-information/lib/aria.js","webpack:///./node_modules/property-information/lib/html.js","webpack:///./node_modules/property-information/lib/svg.js","webpack:///./node_modules/property-information/index.js","webpack:///./node_modules/property-information/lib/find.js","webpack:///./node_modules/property-information/lib/hast-to-react.js","webpack:///./node_modules/style-to-object/esm/index.mjs","webpack:///./node_modules/unist-util-position/lib/index.js","webpack:///./node_modules/unist-util-stringify-position/lib/index.js","webpack:///./node_modules/vfile-message/lib/index.js","webpack:///./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack:///./node_modules/comma-separated-tokens/index.js","webpack:///./node_modules/space-separated-tokens/index.js","webpack:///./node_modules/html-url-attributes/lib/index.js","webpack:///./node_modules/mdast-util-to-string/lib/index.js","webpack:///./node_modules/micromark-util-chunked/index.js","webpack:///./node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack:///./node_modules/micromark-util-subtokenize/index.js","webpack:///./node_modules/micromark-util-combine-extensions/index.js","webpack:///./node_modules/micromark-util-character/index.js","webpack:///./node_modules/micromark-factory-space/index.js","webpack:///./node_modules/micromark/lib/initialize/content.js","webpack:///./node_modules/micromark/lib/initialize/document.js","webpack:///./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack:///./node_modules/micromark-core-commonmark/lib/content.js","webpack:///./node_modules/micromark/lib/initialize/flow.js","webpack:///./node_modules/micromark/lib/initialize/text.js","webpack:///./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack:///./node_modules/micromark-core-commonmark/lib/list.js","webpack:///./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack:///./node_modules/micromark-factory-destination/index.js","webpack:///./node_modules/micromark-factory-label/index.js","webpack:///./node_modules/micromark-factory-title/index.js","webpack:///./node_modules/micromark-factory-whitespace/index.js","webpack:///./node_modules/micromark-util-normalize-identifier/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/definition.js","webpack:///./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack:///./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack:///./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack:///./node_modules/micromark-util-html-tag-name/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack:///./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack:///./node_modules/decode-named-character-reference/index.dom.js","webpack:///./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack:///./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack:///./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack:///./node_modules/micromark-util-resolve-all/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/label-end.js","webpack:///./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack:///./node_modules/micromark-util-classify-character/index.js","webpack:///./node_modules/micromark-core-commonmark/lib/attention.js","webpack:///./node_modules/micromark-core-commonmark/lib/autolink.js","webpack:///./node_modules/micromark-core-commonmark/lib/html-text.js","webpack:///./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack:///./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack:///./node_modules/micromark-core-commonmark/lib/code-text.js","webpack:///./node_modules/micromark/lib/constructs.js","webpack:///./node_modules/micromark/lib/create-tokenizer.js","webpack:///./node_modules/micromark/lib/preprocess.js","webpack:///./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack:///./node_modules/micromark-util-decode-string/index.js","webpack:///./node_modules/mdast-util-from-markdown/lib/index.js","webpack:///./node_modules/micromark/lib/postprocess.js","webpack:///./node_modules/micromark/lib/parse.js","webpack:///./node_modules/remark-parse/lib/index.js","webpack:///./node_modules/@ungap/structured-clone/esm/types.js","webpack:///./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack:///./node_modules/@ungap/structured-clone/esm/serialize.js","webpack:///./node_modules/@ungap/structured-clone/esm/index.js","webpack:///./node_modules/micromark-util-sanitize-uri/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/footer.js","webpack:///./node_modules/unist-util-is/lib/index.js","webpack:///./node_modules/unist-util-visit-parents/lib/index.js","webpack:///./node_modules/unist-util-visit/lib/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/revert.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack:///./node_modules/trim-lines/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack:///./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack:///./node_modules/mdast-util-to-hast/lib/state.js","webpack:///./node_modules/mdast-util-to-hast/lib/index.js","webpack:///./node_modules/remark-rehype/lib/index.js","webpack:///./node_modules/bail/index.js","webpack:///./node_modules/unified/node_modules/is-plain-obj/index.js","webpack:///./node_modules/vfile/lib/minpath.browser.js","webpack:///./node_modules/vfile/lib/minproc.browser.js","webpack:///./node_modules/vfile/lib/minurl.shared.js","webpack:///./node_modules/vfile/lib/index.js","webpack:///./node_modules/vfile/lib/minurl.browser.js","webpack:///./node_modules/unified/lib/callable-instance.js","webpack:///./node_modules/unified/lib/index.js","webpack:///./node_modules/trough/lib/index.js","webpack:///./node_modules/react-markdown/lib/index.js","webpack:///external window \"PropTypes\"","webpack:///./node_modules/ccount/index.js","webpack:///./node_modules/mdast-util-find-and-replace/lib/index.js","webpack:///./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack:///./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack:///./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack:///./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack:///./node_modules/markdown-table/index.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/encode-info.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack:///./node_modules/mdast-util-phrasing/lib/index.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack:///./node_modules/longest-streak/index.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack:///./node_modules/mdast-util-gfm-table/lib/index.js","webpack:///./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack:///./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack:///./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack:///./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack:///./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack:///./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack:///./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack:///./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack:///./node_modules/remark-gfm/lib/index.js","webpack:///./node_modules/micromark-extension-gfm/index.js","webpack:///./node_modules/mdast-util-gfm/lib/index.js","webpack:///./node_modules/lucide-react/dist/esm/icons/file-text.js","webpack:///./node_modules/lucide-react/dist/esm/icons/x.js","webpack:///./node_modules/lucide-react/dist/esm/icons/paperclip.js","webpack:///./node_modules/lucide-react/dist/esm/icons/send.js","webpack:///./src/private/ChatMessageInput.js","webpack:///./src/styles/indicatorStyle.css?f59a","webpack:///./src/private/DotsIndicator.js","webpack:///./src/private/SpinnerIndicator.js","webpack:///./src/styles/chatStyles.css?5f1e","webpack:///./src/lib/components/ChatComponent.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.chat-container {\n    border: 1px solid;\n    border-radius: 8px;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n}\n\n.chat-messages {\n    flex: 1;\n    overflow-y: auto;\n    padding: 5px;\n    display: flex;\n    flex-direction: column;\n}\n\n.message-input-container {\n    width: 100%;\n    margin-top: 10px;\n    border: 1px solid;\n    border-radius: 10px;\n}\n\n.message-input-container .disabled {\n    background-color: #efefef4d;\n    color: #1010104d;\n    border-color: #efefef4d;\n    cursor: auto;\n}\n\n.message-input-field {\n    padding: 10px;\n    border: none;\n    display: block;\n    resize: none;\n    width: 100%;\n    height: 80px;\n    box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n}\n\n.message-input-field:focus {\n    outline: none;\n}\n\n.message-input-button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.input-with-icons {\n    display: flex;\n    justify-content: end;\n    padding: 2px 10px;\n}\n\n.file-upload-button {\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.file-preview-container {\n    position: relative;\n    display: inline-block;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 8px;\n    max-width: 200px;\n    margin: 10px;\n}\n\n.remove-file-button {\n    position: absolute;\n    top: -10px;\n    right: -10px;\n    background: #ff0000d6;\n    border: 1px solid #e0e0e0;\n    border-radius: 100%;\n    height: 20px;\n    width: 20px;\n    cursor: pointer;\n    padding: 3px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.file-preview {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.file-preview svg {\n    color: #fff;\n    margin-right: 10px;\n    background: #007bff;\n    padding: 10px;\n    border-radius: 5px;\n}\n\n.remove-file-button svg {\n    color: #fff;\n}\n\n.file-preview-image {\n    max-width: 100%;\n    border-radius: 5px;\n}\n\n.file-name-preview {\n    font-size: 14px;\n    font-weight: 700;\n    text-align: center;\n    color: #000;\n}\n\n.chat-bubble {\n    max-width: 75%;\n    margin-bottom: 10px;\n    padding: 0px 10px 0px;\n    border-radius: 12px;\n    word-wrap: break-word;\n}\n\n.user .markdown-content a {\n    color: #fff;\n    text-decoration: underline;\n}\n\n.user .markdown-content a:hover {\n    color: #212427;\n}\n\n.markdown-content code {\n    background-color: rgba(0, 0, 0, 0.4);\n    color: #ffffffda;\n    padding: 2px 4px;\n    border-radius: 4px;\n}\n\n.empty-chat {\n    margin: 0 auto;\n}\n\n.actionBtnContainer {\n    position: relative;\n}\n\n.dotsButton {\n    background: none;\n    border: none;\n    font-size: 1.5rem;\n    cursor: pointer;\n}\n\n.dotsButton:hover {\n    background: #cccccc1f;\n    border-radius: 50%;\n    cursor: pointer;\n}\n\n.dropdown {\n    position: relative;\n    display: inline-block;\n}\n\n.dropdownMenu {\n    position: absolute;\n    background-color: white;\n    width: 100px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    z-index: 1000;\n}\n\n.dropdownItem {\n    padding: 8px 12px;\n    background: none;\n    border: none;\n    text-align: left;\n    width: 100%;\n    cursor: pointer;\n}\n\n.dropdownItem:hover {\n    background-color: #f1f1f1;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/chatStyles.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,OAAO;IACP,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,2BAA2B;IAC3B,gBAAgB;IAChB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,cAAc;IACd,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,8BAA8B;IAC9B,2BAA2B;AAC/B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,oBAAoB;IACpB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,qBAAqB;IACrB,yBAAyB;IACzB,mBAAmB;IACnB,YAAY;IACZ,WAAW;IACX,eAAe;IACf,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,mBAAmB;IACnB,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,cAAc;IACd,mBAAmB;IACnB,qBAAqB;IACrB,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,0BAA0B;AAC9B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,oCAAoC;IACpC,gBAAgB;IAChB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;IACZ,wCAAwC;IACxC,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,YAAY;IACZ,gBAAgB;IAChB,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B\",\"sourcesContent\":[\".chat-container {\\n    border: 1px solid;\\n    border-radius: 8px;\\n    padding: 10px;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.chat-messages {\\n    flex: 1;\\n    overflow-y: auto;\\n    padding: 5px;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.message-input-container {\\n    width: 100%;\\n    margin-top: 10px;\\n    border: 1px solid;\\n    border-radius: 10px;\\n}\\n\\n.message-input-container .disabled {\\n    background-color: #efefef4d;\\n    color: #1010104d;\\n    border-color: #efefef4d;\\n    cursor: auto;\\n}\\n\\n.message-input-field {\\n    padding: 10px;\\n    border: none;\\n    display: block;\\n    resize: none;\\n    width: 100%;\\n    height: 80px;\\n    box-sizing: border-box;\\n    -webkit-box-sizing: border-box;\\n    -moz-box-sizing: border-box;\\n}\\n\\n.message-input-field:focus {\\n    outline: none;\\n}\\n\\n.message-input-button {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n}\\n\\n.input-with-icons {\\n    display: flex;\\n    justify-content: end;\\n    padding: 2px 10px;\\n}\\n\\n.file-upload-button {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n}\\n\\n.file-preview-container {\\n    position: relative;\\n    display: inline-block;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 8px;\\n    max-width: 200px;\\n    margin: 10px;\\n}\\n\\n.remove-file-button {\\n    position: absolute;\\n    top: -10px;\\n    right: -10px;\\n    background: #ff0000d6;\\n    border: 1px solid #e0e0e0;\\n    border-radius: 100%;\\n    height: 20px;\\n    width: 20px;\\n    cursor: pointer;\\n    padding: 3px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.file-preview {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.file-preview svg {\\n    color: #fff;\\n    margin-right: 10px;\\n    background: #007bff;\\n    padding: 10px;\\n    border-radius: 5px;\\n}\\n\\n.remove-file-button svg {\\n    color: #fff;\\n}\\n\\n.file-preview-image {\\n    max-width: 100%;\\n    border-radius: 5px;\\n}\\n\\n.file-name-preview {\\n    font-size: 14px;\\n    font-weight: 700;\\n    text-align: center;\\n    color: #000;\\n}\\n\\n.chat-bubble {\\n    max-width: 75%;\\n    margin-bottom: 10px;\\n    padding: 0px 10px 0px;\\n    border-radius: 12px;\\n    word-wrap: break-word;\\n}\\n\\n.user .markdown-content a {\\n    color: #fff;\\n    text-decoration: underline;\\n}\\n\\n.user .markdown-content a:hover {\\n    color: #212427;\\n}\\n\\n.markdown-content code {\\n    background-color: rgba(0, 0, 0, 0.4);\\n    color: #ffffffda;\\n    padding: 2px 4px;\\n    border-radius: 4px;\\n}\\n\\n.empty-chat {\\n    margin: 0 auto;\\n}\\n\\n.actionBtnContainer {\\n    position: relative;\\n}\\n\\n.dotsButton {\\n    background: none;\\n    border: none;\\n    font-size: 1.5rem;\\n    cursor: pointer;\\n}\\n\\n.dotsButton:hover {\\n    background: #cccccc1f;\\n    border-radius: 50%;\\n    cursor: pointer;\\n}\\n\\n.dropdown {\\n    position: relative;\\n    display: inline-block;\\n}\\n\\n.dropdownMenu {\\n    position: absolute;\\n    background-color: white;\\n    width: 100px;\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n    z-index: 1000;\\n}\\n\\n.dropdownItem {\\n    padding: 8px 12px;\\n    background: none;\\n    border: none;\\n    text-align: left;\\n    width: 100%;\\n    cursor: pointer;\\n}\\n\\n.dropdownItem:hover {\\n    background-color: #f1f1f1;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.typing-dots {\n    display: flex;\n    gap: 4px;\n}\n\n.typing-dots span {\n    display: inline-block;\n    width: 8px;\n    height: 8px;\n    background-color: gray;\n    border-radius: 50%;\n    animation: bounce 1.2s infinite ease-in-out;\n}\n\n.typing-dots span:nth-child(2) {\n    animation-delay: 0.2s;\n}\n\n.typing-dots span:nth-child(3) {\n    animation-delay: 0.4s;\n}\n\n.typing-spinner {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    border: 3px solid gray;\n    border-top: 3px solid transparent;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n\n@keyframes bounce {\n\n    0%,\n    80%,\n    100% {\n        transform: scale(0);\n    }\n\n    40% {\n        transform: scale(1);\n    }\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/indicatorStyle.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,qBAAqB;IACrB,UAAU;IACV,WAAW;IACX,sBAAsB;IACtB,kBAAkB;IAClB,2CAA2C;AAC/C;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,iCAAiC;IACjC,kBAAkB;IAClB,kCAAkC;AACtC;;AAEA;IACI;QACI,uBAAuB;IAC3B;;IAEA;QACI,yBAAyB;IAC7B;AACJ;;;AAGA;;IAEI;;;QAGI,mBAAmB;IACvB;;IAEA;QACI,mBAAmB;IACvB;AACJ\",\"sourcesContent\":[\".typing-dots {\\n    display: flex;\\n    gap: 4px;\\n}\\n\\n.typing-dots span {\\n    display: inline-block;\\n    width: 8px;\\n    height: 8px;\\n    background-color: gray;\\n    border-radius: 50%;\\n    animation: bounce 1.2s infinite ease-in-out;\\n}\\n\\n.typing-dots span:nth-child(2) {\\n    animation-delay: 0.2s;\\n}\\n\\n.typing-dots span:nth-child(3) {\\n    animation-delay: 0.4s;\\n}\\n\\n.typing-spinner {\\n    display: inline-block;\\n    width: 20px;\\n    height: 20px;\\n    border: 3px solid gray;\\n    border-top: 3px solid transparent;\\n    border-radius: 50%;\\n    animation: spin 1s linear infinite;\\n}\\n\\n@keyframes spin {\\n    from {\\n        transform: rotate(0deg);\\n    }\\n\\n    to {\\n        transform: rotate(360deg);\\n    }\\n}\\n\\n\\n@keyframes bounce {\\n\\n    0%,\\n    80%,\\n    100% {\\n        transform: scale(0);\\n    }\\n\\n    40% {\\n        transform: scale(1);\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var getCurrentScript = function() {\n    var script = document.currentScript;\n    if (!script) {\n        /* Shim for IE11 and below */\n        /* Do not take into account async scripts and inline scripts */\n\n        var doc_scripts = document.getElementsByTagName('script');\n        var scripts = [];\n\n        for (var i = 0; i < doc_scripts.length; i++) {\n            scripts.push(doc_scripts[i]);\n        }\n\n        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n        script = scripts.slice(-1)[0];\n    }\n\n    return script;\n};\n\nvar isLocalScript = function(script) {\n    return /\\/_dash-component-suites\\//.test(script.src);\n};\n\nObject.defineProperty(__webpack_require__, 'p', {\n    get: (function () {\n        var script = getCurrentScript();\n\n        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n        return function() {\n            return url;\n        };\n    })()\n});\n\nif (typeof jsonpScriptSrc !== 'undefined') {\n    var __jsonpScriptSrc__ = jsonpScriptSrc;\n    jsonpScriptSrc = function(chunkId) {\n        var script = getCurrentScript();\n        var isLocal = isLocalScript(script);\n\n        var src = __jsonpScriptSrc__(chunkId);\n\n        if(!isLocal) {\n            return src;\n        }\n\n        var srcFragments = src.split('/');\n        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n        fileFragments.splice(1, 0, \"v0_2_0m1741734027\");\n        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n        return srcFragments.join('/');\n    };\n}\n","__webpack_require__.nc = undefined;","/**\n * @license lucide-react v0.477.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\n\nexport { mergeClasses, toKebabCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.477.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.477.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.477.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),\n      ...props\n    })\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.477.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"12\", cy: \"5\", r: \"1\", key: \"gxeob9\" }],\n  [\"circle\", { cx: \"12\", cy: \"19\", r: \"1\", key: \"lyex9k\" }]\n];\nconst EllipsisVertical = createLucideIcon(\"EllipsisVertical\", __iconNode);\n\nexport { __iconNode, EllipsisVertical as default };\n//# sourceMappingURL=ellipsis-vertical.js.map\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[text][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @import {Element, ElementContent, Nodes, Parents, Root} from 'hast'\n * @import {ComponentProps, ElementType, ReactElement} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in Extract<ElementType, string>]?: ElementType<ComponentProps<Key> & ExtraProps>\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    // @ts-expect-error\n    // React components are allowed to return numbers,\n    // but not according to the types in hast-util-to-jsx-runtime\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @license lucide-react v0.477.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\"path\", { d: \"M10 9H8\", key: \"b1mrlr\" }],\n  [\"path\", { d: \"M16 13H8\", key: \"t4e002\" }],\n  [\"path\", { d: \"M16 17H8\", key: \"z1uh3a\" }]\n];\nconst FileText = createLucideIcon(\"FileText\", __iconNode);\n\nexport { __iconNode, FileText as default };\n//# sourceMappingURL=file-text.js.map\n","/**\n * @license lucide-react v0.477.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M18 6 6 18\", key: \"1bl5f8\" }],\n  [\"path\", { d: \"m6 6 12 12\", key: \"d8bk6v\" }]\n];\nconst X = createLucideIcon(\"X\", __iconNode);\n\nexport { __iconNode, X as default };\n//# sourceMappingURL=x.js.map\n","/**\n * @license lucide-react v0.477.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M13.234 20.252 21 12.3\", key: \"1cbrk9\" }],\n  [\n    \"path\",\n    {\n      d: \"m16 6-8.414 8.586a2 2 0 0 0 0 2.828 2 2 0 0 0 2.828 0l8.414-8.586a4 4 0 0 0 0-5.656 4 4 0 0 0-5.656 0l-8.415 8.585a6 6 0 1 0 8.486 8.486\",\n      key: \"1pkts6\"\n    }\n  ]\n];\nconst Paperclip = createLucideIcon(\"Paperclip\", __iconNode);\n\nexport { __iconNode, Paperclip as default };\n//# sourceMappingURL=paperclip.js.map\n","/**\n * @license lucide-react v0.477.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\",\n      key: \"1ffxy3\"\n    }\n  ],\n  [\"path\", { d: \"m21.854 2.147-10.94 10.939\", key: \"12cjpa\" }]\n];\nconst Send = createLucideIcon(\"Send\", __iconNode);\n\nexport { __iconNode, Send as default };\n//# sourceMappingURL=send.js.map\n","/**\n * Example Usage:\n * ```\n * <MessageInput\n *     onSend={handleSend}\n *     handleInputChange={handleInput}\n *     value={messageValue}\n *     placeholder=\"Type your message here\"\n *     buttonLabel=\"Send\"\n *     customStyles={{ backgroundColor: \"#f0f0f0\" }}\n *     inputComponentStyles={{ padding: \"10px\" }}\n *     showTyping={showTyping}\n *     setAttachment={showTsetAttachmentyping}\n * />\n * ```\n*/\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Paperclip, Send, X, FileText } from \"lucide-react\";\n\n/**\n * A reusable message input component for chat interfaces.\n*/\n\nconst MessageInput = ({\n    onSend,\n    handleInputChange,\n    value,\n    setAttachment,\n    placeholder = \"Start typing...\",\n    buttonLabel,\n    customStyles = null,\n    inputComponentStyles = null,\n    showTyping = false,\n    fileTypes,\n}) => {\n    const fileInputRef = useRef(null);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [filePreview, setFilePreview] = useState(null);\n\n    const handleFileUpload = (event) => {\n        const file = event.target.files[0];\n        const fileType = file.type;\n\n        if (file) {\n            setSelectedFile(file);\n            setAttachment(file);\n\n            if (fileType.startsWith(\"image/\")) {\n                setFilePreview(URL.createObjectURL(file));\n            } else {\n                setFilePreview(file.name);\n            }\n        }\n    };\n\n    const handleRemoveFile = () => {\n        setSelectedFile(null);\n        setFilePreview(null);\n    };\n\n    const handleSend = () => {\n        if (value.trim() || selectedFile) {\n            onSend(value, selectedFile);\n            setSelectedFile(null);\n            setFilePreview(null);\n        }\n    };\n\n    return (\n        <div className=\"message-input-container\" style={customStyles}>\n            {filePreview && (\n                <div className=\"file-preview-container\">\n                    <button className=\"remove-file-button\" onClick={handleRemoveFile}>\n                        <X size={10} />\n                    </button>\n                    {(\n                        selectedFile.type === \"application/pdf\" ||\n                        selectedFile.type === \"application/msword\" ||\n                        selectedFile.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                    ) ? (\n                        <div className=\"file-preview\">\n                            <FileText size={15} />\n                            <p className=\"file-name-preview\">{selectedFile.name}</p>\n                        </div>\n                    ) : selectedFile.type.startsWith(\"image/\") ? (\n                        <img src={filePreview} alt=\"Preview\" className=\"file-preview-image\" />\n                    ) : <p className=\"file-name-preview\">{selectedFile.name} unsupported</p>}\n                </div>\n            )}\n            <textarea\n                name=\"text\"\n                wrap=\"soft\"\n                value={value}\n                placeholder={placeholder}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                    if (e.key === \"Enter\" && !showTyping) {\n                        handleSend();\n                    }\n                }}\n                style={inputComponentStyles}\n                className=\"message-input-field\"\n            />\n            <div className=\"input-with-icons\">\n                <button className=\"file-upload-button\" onClick={() => fileInputRef.current.click()}>\n                    <Paperclip size={20} />\n                </button>\n                <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    style={{ display: \"none\" }}\n                    accept={fileTypes}\n                    onChange={handleFileUpload}\n                />\n                <button\n                    onClick={handleSend}\n                    className={`message-input-button ${showTyping ? 'disabled' : ''}`}\n                    data-testid=\"send-button\"\n                    disabled={showTyping}\n                >\n                    {buttonLabel ? buttonLabel : <Send size={18} />}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nMessageInput.propTypes = {\n    /**\n     * Callback to send the current message. Triggered on button click or pressing \"Enter\".\n    */\n    onSend: PropTypes.func.isRequired,\n    /**\n     * Callback to handle input field changes.\n    */\n    handleInputChange: PropTypes.func.isRequired,\n    /**\n     * The current value of the input field.\n    */\n    value: PropTypes.string,\n    /**\n     * Placeholder text for the input field. Default is `\"Start typing...\"`.\n    */\n    placeholder: PropTypes.string,\n    /**\n     * Label for the send button. Default is `\"Send\"`.\n    */\n    buttonLabel: PropTypes.string,\n    /**\n     * Inline styles for the container holding the input and button.\n    */\n    customStyles: PropTypes.object,\n    /**\n     * Inline styles for the input field.\n    */\n    inputComponentStyles: PropTypes.object,\n    /**\n     * Disable button when waiting for message.\n    */\n    showTyping: PropTypes.bool,\n    /**\n     * .\n    */\n    setAttachment: PropTypes.func,\n};\n\nexport default MessageInput;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./indicatorStyle.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./indicatorStyle.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles/indicatorStyle.css\"\n\n/**\n * A resuable dots typing indicator\n*/\n\nconst TypingIndicatorDots = ({ color = \"gray\" }) => {\n    return (\n        <div className=\"typing-dots\" style={{ color }}>\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n    );\n};\n\nTypingIndicatorDots.propTypes = {\n    /**\n     * Color of the dots\n    */\n    color: PropTypes.string,\n};\n\nexport default TypingIndicatorDots;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles/indicatorStyle.css\"\n\n/**\n * A resuable spinner typing indicator\n*/\nconst SPINNER_SIZE = 20;\n\nconst TypingIndicatorSpinner = ({ size = SPINNER_SIZE, color = \"gray\" }) => {\n    return (\n        <div\n            className=\"typing-spinner\"\n            style={{\n                width: size,\n                height: size,\n                borderColor: color,\n                borderTopColor: \"transparent\",\n            }}\n        ></div>\n    );\n};\n\nTypingIndicatorSpinner.propTypes = {\n    /**\n     * size of the spinner\n    */\n    size: PropTypes.number,\n    /**\n     * Color of the spinner\n    */\n    color: PropTypes.string,\n};\n\nexport default TypingIndicatorSpinner;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./chatStyles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./chatStyles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * Example Usage:\n * ```\n * <ChatComponent\n *     id=\"chat\"\n *     messages={[\n *         { role: \"assistant\", content: \"Hello! How can I assist you today?\" }\n *     ]}\n *     typing_indicator=\"dots\"\n *     theme=\"dark\"\n *     custom_styles={{ backgroundColor: \"#222\", color: \"#fff\" }}\n *     is_typing={{ user: false, assistant: true }}\n * />\n * ```\n*/\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { EllipsisVertical } from \"lucide-react\";\nimport Markdown from \"react-markdown\";\nimport PropTypes from \"prop-types\";\nimport remarkGfm from \"remark-gfm\";\nimport { FileText } from \"lucide-react\";\n\nimport MessageInput from \"../../private/ChatMessageInput\";\nimport TypingIndicatorDots from \"../../private/DotsIndicator\";\nimport TypingIndicatorSpinner from \"../../private/SpinnerIndicator\";\n\nimport \"../../styles/chatStyles.css\";\n\nconst defaultUserBubbleStyle = {\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    marginLeft: \"auto\",\n    textAlign: \"right\",\n};\n\nconst defaultAssistantBubbleStyle = {\n    backgroundColor: \"#f1f0f0\",\n    color: \"black\",\n    marginRight: \"auto\",\n    textAlign: \"left\",\n};\n\n/**\n * ChatComponent - A React-based chat interface with customizable styles and typing indicators.\n * * This component provides a chat interface with support for:\n * - Displaying messages exchanged between 2 users typically a user and an assistant.\n * - Customizable themes and styles for the chat UI.\n * - Typing indicators for both the user and assistant.\n * - Integration with Dash via the `setProps` callback for state management.\n*/\n\nconst ChatComponent = ({\n    /**\n     * allowing snake_case to support Python's naming convention\n     * except for setProps which is automatically set by dash and\n     * it's expected to be named in the camelCase format.\n     * https://dash.plotly.com/react-for-python-developers\n    */\n    id,\n    messages = [],\n    theme = \"light\",\n    container_style: containerStyle = null,\n    typing_indicator: typingIndicator = \"dots\",\n    input_container_style: inputContainerStyle = null,\n    input_text_style: inputTextStyle = null,\n    setProps = () => { },\n    fill_height: fillHeight = true,\n    fill_width: fillWidth = true,\n    user_bubble_style: userBubbleStyleProp = {},\n    assistant_bubble_style: assistantBubbleStyleProp = {},\n    input_placeholder: inputPlaceholder = \"\",\n    class_name: className = \"\",\n    persistence = false,\n    persistence_type: persistenceType = \"local\",\n    file_types : fileTypes = \"*/*\",\n}) => {\n    const userBubbleStyle = { ...defaultUserBubbleStyle, ...userBubbleStyleProp };\n    const assistantBubbleStyle = { ...defaultAssistantBubbleStyle, ...assistantBubbleStyleProp };\n    const [currentMessage, setCurrentMessage] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const [localMessages, setLocalMessages] = useState([]);\n    const [showTyping, setShowTyping] = useState(false);\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const messageEndRef = useRef(null);\n    const dropdownRef = useRef(null);\n\n    let storeType;\n    if (persistenceType === \"local\") {\n        storeType = \"localStorage\";\n    } else if (persistenceType === \"local\") {\n        storeType = \"sessionStorage\";\n    }\n\n    // load messages from storage or initialize from messages\n    useEffect(() => {\n        if (persistence) {\n            const savedMessages = JSON.parse(window[storeType].getItem(id)) || [];\n            const initialized = JSON.parse(window[storeType].getItem(`${id}-initialized`));\n            if (savedMessages.length > 0) {\n                setLocalMessages(savedMessages);\n            } else if (!initialized && messages.length > 0) {\n                setLocalMessages(messages);\n                window[storeType].setItem(id, JSON.stringify(messages));\n                window[storeType].setItem(`${id}-initialized`, \"true\");\n            }\n        } else {\n            setLocalMessages(messages);\n        }\n    }, [id, persistence, storeType]);\n\n    // persist messages whenever localMessages updates\n    useEffect(() => {\n        if (persistence && localMessages.length > 0) {\n            window[storeType].setItem(id, JSON.stringify(localMessages));\n        }\n    }, [localMessages, id, persistence, storeType]);\n\n    // hide typing indicator & update local messages with new ones\n    useEffect(() => {\n        if (messages.length > 0) {\n            const lastMsg = messages.slice(-1).pop();\n            if (lastMsg?.role === \"assistant\" && showTyping) {\n                setShowTyping(false);\n                setLocalMessages((prevMessages) => [...prevMessages, lastMsg]);\n            } else {\n                setLocalMessages(messages || []);\n            }\n        }\n    }, [messages]);\n\n    useEffect(() => {\n        if (messageEndRef.current) {\n            messageEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }, [localMessages]);\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setDropdownOpen(false);\n            }\n        };\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n\n\n    const handleInputChange = (e) => {\n        setCurrentMessage(e.target.value);\n    };\n\n    const convertFileToBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n    };\n\n    const handleSendMessage = async () => {\n        if (currentMessage.trim() || attachment) {\n            let content;\n            if (attachment) {\n                content = [\n                    { type: \"text\", text: currentMessage.trim() },\n                    {\n                        type: \"attachment\",\n                        file: attachment,\n                        fileName: attachment.name,\n                        fileType: attachment.type,\n                    }\n                ];\n                if (typeof attachment === \"string\" && attachment.startsWith(\"http\")) {\n                    content[1].fileName = attachment.split(\"/\").pop();\n                    content[1].fileType = \"image/url\";\n                } else {\n                    content[1].file = await convertFileToBase64(attachment);\n                }\n            } else {\n                content = currentMessage.trim();\n            }\n\n            const newMessage = { role: \"user\", content };\n            setLocalMessages((prevMessages) => {\n                const updatedMessages = [...prevMessages, newMessage];\n                if (persistence) {\n                    window[storeType].setItem(id, JSON.stringify(updatedMessages));\n                }\n                return updatedMessages;\n            });\n\n            if (setProps) {\n                setProps({ new_message: newMessage });\n            }\n\n            setShowTyping(true);\n            setCurrentMessage(\"\");\n            setAttachment(null);\n        }\n    };\n\n    const handleClearChat = () => {\n        setLocalMessages([]);\n        if (persistence) {\n            window[storeType].removeItem(id);\n        }\n        setDropdownOpen(false);\n    };\n\n    const styleChatContainer = {};\n    const inputFieldStyle = {};\n    if (fillHeight) {\n        styleChatContainer.height = \"100%\";\n    } else {\n        styleChatContainer.height = \"50%\";\n    }\n    if (fillWidth) {\n        styleChatContainer.width = \"auto\";\n    } else {\n        styleChatContainer.width = \"50%\";\n    }\n    if (theme === \"dark\") {\n        styleChatContainer.backgroundColor = \"#161618\";\n        styleChatContainer.borderColor = \"#444444\";\n        styleChatContainer.color = \"#ffffff\";\n        inputFieldStyle.borderColor = \"#f1f0f0\";\n        inputFieldStyle.color = \"#000000\";\n    } else {\n        styleChatContainer.backgroundColor = \"#ffffff\";\n        styleChatContainer.borderColor = \"#e0e0e0\";\n        styleChatContainer.color = \"#e0e0e0\";\n        inputFieldStyle.borderColor = \"#e0e0e0\"\n    }\n\n    return (\n        <div className={`chat-container ${className}`} style={{ ...styleChatContainer, ...containerStyle }}>\n            {persistence && (\n                <div className=\"actionBtnContainer\" ref={dropdownRef}>\n                    <div className=\"dropdown\">\n                        <button className=\"dotsButton\" onClick={() => setDropdownOpen(!dropdownOpen)} aria-label=\"clear\">\n                            <EllipsisVertical size={24} />\n                        </button>\n                        {dropdownOpen && (\n                            <div className=\"dropdownMenu\">\n                                <button onClick={handleClearChat} className=\"dropdownItem\">\n                                    Clear chat\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            )}\n            <div className=\"chat-messages\">\n                {localMessages.length === 0 ? (\n                    <div className=\"empty-chat\">No conversation yet.</div>\n                ) : (\n                    localMessages.map((message, index) => {\n                        if (!message || typeof message !== \"object\" || !message.role || !message.content) {\n                            return null;\n                        }\n                        const bubbleStyle = message.role === \"user\" ? userBubbleStyle : assistantBubbleStyle;\n                        return (\n                            <div key={index} className={`chat-bubble ${message.role}`} style={bubbleStyle}>\n                                <div className=\"markdown-content\">\n                                    {Array.isArray(message.content) ? (\n                                        message.content.map((item, i) => (\n                                            <div key={i} className=\"attachment-text-container\">\n                                                {item.type === \"text\" && (\n                                                    <Markdown remarkPlugins={[remarkGfm]}>{item.text}</Markdown>\n                                                )}\n\n                                                {item.type === \"attachment\" && (\n                                                    item.fileName.match(/\\.(jpeg|jpg|png|gif)$/i) ? (\n                                                        <img\n                                                            src={item.file}\n                                                            alt={item.fileName}\n                                                            style={{ maxWidth: \"30%\", borderRadius: \"5px\", paddingTop: \"10px\" }}\n                                                        />\n                                                    ) : (\n                                                        <a href={item.file} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                            <FileText size={15} /> View {item.fileName}\n                                                        </a>\n                                                    )\n                                                )}\n                                            </div>\n                                        ))\n                                    ) : (\n                                        <Markdown remarkPlugins={[remarkGfm]}>{message.content}</Markdown>\n                                    )}\n                                </div>\n                            </div>\n                        );\n                    })\n                )}\n                {showTyping && (\n                    <div className=\"typing-indicator user-typing\">\n                        {typingIndicator === \"dots\" && <TypingIndicatorDots />}\n                        {typingIndicator === \"spinner\" && <TypingIndicatorSpinner />}\n                    </div>\n                )}\n                <div ref={messageEndRef} />\n            </div>\n            <div className=\"chat-input\">\n                <MessageInput\n                    onSend={handleSendMessage}\n                    handleInputChange={handleInputChange}\n                    value={currentMessage}\n                    customStyles={inputContainerStyle}\n                    inputComponentStyles={{ ...inputFieldStyle, ...inputTextStyle }}\n                    placeholder={inputPlaceholder}\n                    showTyping={showTyping}\n                    setAttachment={setAttachment}\n                    fileTypes={fileTypes}\n                />\n            </div>\n        </div>\n    );\n};\n\nChatComponent.propTypes = {\n    /**\n     * The ID of this component, used to identify dash components\n     * in callbacks. The ID needs to be unique across all of the\n     * components in an app.\n    */\n    id: PropTypes.string,\n    /**\n     * An array of options. The list of chat messages. Each message object should have:\n     *    - `role` (string): The message sender, either \"user\" or \"assistant\".\n     *    - `content` (string): The content of the message.\n    */\n    messages: PropTypes.arrayOf(\n        PropTypes.shape({\n            role: PropTypes.oneOf([\"user\", \"assistant\"]).isRequired,\n            content: PropTypes.oneOfType([\n                PropTypes.array,\n                PropTypes.string,\n            ]).isRequired,\n        })\n    ),\n    /**\n     * Dash-assigned callback that gets fired when the value for messages and isTyping changes.\n    */\n    setProps: PropTypes.func,\n    /**\n     * Theme for the chat interface. Default is \"light\". Use \"dark\" for a dark mode appearance.\n    */\n    theme: PropTypes.string,\n    /**\n     * Inline css styles to customize the chat container.\n    */\n    container_style: PropTypes.object,\n    /**\n     * The type of typing indicator to display. Options are:\n     *    - `\"dots\"`: Displays animated dots.\n     *    - `\"spinner\"`: Displays a spinner animation.\n    */\n    typing_indicator: PropTypes.oneOf([\"dots\", \"spinner\"]),\n    /**\n     * Latest chat message that was appended to messages array.\n    */\n    new_message: PropTypes.object,\n    /**\n     * Inline styles for the container holding the message input field.\n    */\n    input_container_style: PropTypes.object,\n    /**\n     * Inline styles for the message input field itself.\n    */\n    input_text_style: PropTypes.object,\n    /**\n     *  Whether to vertically fill the screen with the chat container. If False, centers and constrains container to a maximum height.\n    */\n    fill_height: PropTypes.bool,\n    /**\n     * Whether to horizontally fill the screen with the chat container. If False, centers and constrains container to a maximum width.\n    */\n    fill_width: PropTypes.bool,\n    /**\n     * Css styles to customize the user message bubble.\n    */\n    user_bubble_style: PropTypes.object,\n    /**\n     * Css styles to customize the assistant message bubble.\n    */\n    assistant_bubble_style: PropTypes.object,\n    /**\n     * Placeholder input to bne used in the input field\n    */\n    input_placeholder: PropTypes.string,\n    /**\n     * Name for the class attribute to be added to the chat container\n    */\n    class_name: PropTypes.string,\n    /**\n     * Whether messages should be stored for persistence\n    */\n    persistence: PropTypes.bool,\n    /**\n     * Where persisted messages will be stored\n    */\n    persistence_type: PropTypes.oneOf([\"local\", \"session\"]),\n    /**\n     * Comma separated type of files to accept in the attachment file input\n    */\n    file_types: PropTypes.string,\n};\n\nexport default ChatComponent;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","hasOwn","Object","prototype","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","end","source","errorsList","error","msg","err","Error","reason","filename","silent","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","f","Symbol","for","l","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","a","g","b","d","e","h","defaultProps","$$typeof","props","_owner","current","Fragment","jsx","jsxs","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__importDefault","mod","__esModule","iterator","styleObject","inline_style_parser_1","default","hasIterator","forEach","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","o","get","r","toStringTag","url","getCurrentScript","script","currentScript","doc_scripts","getElementsByTagName","scripts","filter","s","async","text","textContent","split","jsonpScriptSrc","__jsonpScriptSrc__","chunkId","isLocal","test","srcFragments","fileFragments","nc","toKebabCase","string","toLowerCase","mergeClasses","classes","className","array","Boolean","indexOf","defaultAttributes","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Icon","forwardRef","color","size","absoluteStrokeWidth","children","iconNode","rest","Number","tag","attrs","createLucideIcon","iconName","Component","displayName","EllipsisVertical","cx","cy","nameRe","nameReJsx","emptyOptions","empty","Schema","normal","space","merge","definitions","assign","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","DefinedInfo","mask","super","mark","check","values","own","create","properties","info","transform","includes","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","loading","loop","low","manifest","max","maxLength","method","min","minLength","multiple","muted","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","kebab","$0","camelcase","toUpperCase","hastToReact","pointEnd","point","pointStart","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","message","ruleId","parent","fatal","file","stack","actual","expected","note","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","one","state","parentSchema","schema","tagName","findComponentFromName","alignValue","createProperty","tableCellAlignToStyle","has","stylePropertyNameCase","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","evaluater","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","passNode","countsByName","passKeys","set","Type","dashes","find","isNaN","settings","padRight","padLeft","toCamel","ignoreInvalidStyle","filePath","parseStyle","String","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","elementAttributeNameCase","allowExpression","computed","optional","components","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","items","parameters","chunkStart","unshift","SpliceBuffer","initial","left","right","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","reverse","deleteCount","Math","trunc","removed","chunkedPush","pushMany","unshiftMany","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","combineExtensions","extensions","all","syntaxExtension","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","entry","nok","disable","null","blankLine","partial","after","resolve","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_bufferIndex","thematicBreak","marker","sequence","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","decodeNamedCharacterReference","characterReference","innerHTML","numeric","characterEscape","lineEnding","called","labelEnd","newEvents","close","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","chunkIndex","go","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","search","decodeNumericCharacterReference","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","spread","_spread","listItemValue","expectingFirstListItemValue","listOrdered","listUnordered","reference","referenceType","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","depth","onexitdata","characterEscapeValue","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","characterReferenceType","resume","flowCodeInside","codeFencedFence","onexithardbreak","inReference","fragment","labelText","ancestor","decodeString","atHardBreak","setextHeadingSlurpLineEnding","setextHeadingLineSequence","codePointAt","setextHeadingText","configure","mdastExtensions","tree","tokenStack","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","and","errorHandler","onExitError","siblings","ordered","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","out","unpair","Date","flags","RegExp","BigInt","Uint8Array","DataView","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","entries","toISOString","serializer","structuredClone","any","normalizeUri","skip","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","testFunction","looksLikeANode","EXIT","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","handlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","minpath","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","minproc","isUrl","fileUrlOrPath","protocol","auth","VFile","isUint8Array","cwd","history","messages","stored","basename","assertNonEmpty","assertPart","dirname","stem","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","urlToPath","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","fns","pipeline","middlewareIndex","callback","output","fn","middleware","fnExpectsCallback","done","then","middelware","trough","attacher","assertUnfrozen","freeze","transformer","parse","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","createEvaluater","toJsxRuntime","colon","questionMark","numberSign","ccount","character","toFunction","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","ignored","pairs","tupleOrList","tuple","toPairs","pairIndex","grandparent","change","matchObject","input","global","findAndReplace","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","createTracker","move","subexit","safe","associationId","indentLines","containerFlow","blank","peek","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","_1","unsafe","checkQuote","quote","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","checkEmphasis","betweenHead","betweenTail","attentionEncodeSurroundingInfo","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","substring","longestStreak","encode","rank","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","some","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImplementation","sort","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","FileText","X","Paperclip","Send","MessageInput","_ref","onSend","handleInputChange","setAttachment","_ref$placeholder","buttonLabel","_ref$customStyles","customStyles","_ref$inputComponentSt","inputComponentStyles","_ref$showTyping","showTyping","fileTypes","fileInputRef","useRef","_useState2","_slicedToArray","useState","selectedFile","setSelectedFile","_useState4","filePreview","setFilePreview","handleSend","React","startsWith","click","files","fileType","createObjectURL","propTypes","PropTypes","isRequired","locals","TypingIndicatorDots","_ref$color","TypingIndicatorSpinner","_ref$size","borderTopColor","_regeneratorRuntime","t","asyncIterator","u","define","Generator","Context","makeInvokeMethod","tryCatch","arg","GeneratorFunction","GeneratorFunctionPrototype","v","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isGeneratorFunction","__proto__","awrap","prev","rval","finish","delegateYield","asyncGeneratorStep","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","ownKeys","getOwnPropertySymbols","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","_toPrimitive","_toPropertyKey","defaultUserBubbleStyle","backgroundColor","marginLeft","textAlign","defaultAssistantBubbleStyle","marginRight","ChatComponent","storeType","_ref$messages","_ref$theme","theme","_ref$container_style","container_style","containerStyle","_ref$typing_indicator","typing_indicator","typingIndicator","_ref$input_container_","input_container_style","inputContainerStyle","_ref$input_text_style","input_text_style","inputTextStyle","_ref$setProps","setProps","_ref$fill_height","fill_height","fillHeight","_ref$fill_width","fill_width","fillWidth","_ref$user_bubble_styl","user_bubble_style","userBubbleStyleProp","_ref$assistant_bubble","assistant_bubble_style","assistantBubbleStyleProp","_ref$input_placeholde","input_placeholder","inputPlaceholder","_ref$class_name","class_name","_ref$persistence","persistence","_ref$persistence_type","persistence_type","persistenceType","_ref$file_types","file_types","userBubbleStyle","assistantBubbleStyle","currentMessage","setCurrentMessage","attachment","_useState6","localMessages","setLocalMessages","_useState8","setShowTyping","_useState10","dropdownOpen","setDropdownOpen","messageEndRef","dropdownRef","useEffect","savedMessages","getItem","initialized","setItem","lastMsg","prevMessages","scrollIntoView","behavior","handleClickOutside","contains","addEventListener","removeEventListener","convertFileToBase64","reader","FileReader","readAsDataURL","onload","onerror","handleSendMessage","_ref2","_callee","newMessage","_context","updatedMessages","new_message","_next","_throw","styleChatContainer","inputFieldStyle","removeItem","bubbleStyle","maxWidth","borderRadius","paddingTop"],"sourceRoot":""}